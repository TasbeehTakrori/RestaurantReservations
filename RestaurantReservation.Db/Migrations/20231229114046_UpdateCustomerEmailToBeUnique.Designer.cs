// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReservation.Domain;

#nullable disable

namespace RestaurantReservation.Domain.Migrations
{
    [DbContext(typeof(RestaurantReservationDbContext))]
    [Migration("20231229114046_UpdateCustomerEmailToBeUnique")]
    partial class UpdateCustomerEmailToBeUnique
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RestaurantReservation.Db.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "Dalton99@hotmail.com",
                            FirstName = "Russell",
                            LastName = "Wehner",
                            PhoneNumber = "1-316-948-8692"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "Allan_Nikolaus74@yahoo.com",
                            FirstName = "Furman",
                            LastName = "Schneider",
                            PhoneNumber = "(282) 228-7701 x28624"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "Katlynn_Strosin47@hotmail.com",
                            FirstName = "Briana",
                            LastName = "Bruen",
                            PhoneNumber = "686.904.7558"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "Felipe28@yahoo.com",
                            FirstName = "Linnea",
                            LastName = "Reynolds",
                            PhoneNumber = "464.365.6416"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "Merlin.Bergnaum99@yahoo.com",
                            FirstName = "Berniece",
                            LastName = "Considine",
                            PhoneNumber = "(705) 810-0208"
                        },
                        new
                        {
                            CustomerId = 6,
                            Email = "Kaci76@gmail.com",
                            FirstName = "Nicolas",
                            LastName = "Rutherford",
                            PhoneNumber = "(478) 831-1386"
                        },
                        new
                        {
                            CustomerId = 7,
                            Email = "Astrid.Feeney37@yahoo.com",
                            FirstName = "Marie",
                            LastName = "Becker",
                            PhoneNumber = "(265) 878-3667"
                        },
                        new
                        {
                            CustomerId = 8,
                            Email = "Raquel.Kshlerin5@yahoo.com",
                            FirstName = "Effie",
                            LastName = "Bartell",
                            PhoneNumber = "1-227-238-4018 x3791"
                        },
                        new
                        {
                            CustomerId = 9,
                            Email = "Josue96@yahoo.com",
                            FirstName = "Lonie",
                            LastName = "Grimes",
                            PhoneNumber = "1-904-294-0698"
                        },
                        new
                        {
                            CustomerId = 10,
                            Email = "Helen89@hotmail.com",
                            FirstName = "Graham",
                            LastName = "Mayert",
                            PhoneNumber = "(644) 437-3815"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Randy",
                            LastName = "Ondricka",
                            Position = "Lead Implementation Associate",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Mercedes",
                            LastName = "Wintheiser",
                            Position = "Legacy Infrastructure Strategist",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Nathan",
                            LastName = "Dickens",
                            Position = "International Research Liaison",
                            RestaurantId = 5
                        },
                        new
                        {
                            EmployeeId = 4,
                            FirstName = "Francis",
                            LastName = "Moore",
                            Position = "Global Tactics Designer",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 5,
                            FirstName = "Shawna",
                            LastName = "Hayes",
                            Position = "Chief Intranet Architect",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 6,
                            FirstName = "Norman",
                            LastName = "Kris",
                            Position = "Principal Communications Designer",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 7,
                            FirstName = "Whitney",
                            LastName = "Johnston",
                            Position = "Regional Operations Representative",
                            RestaurantId = 1
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            Description = "Saepe atque delectus voluptas et.",
                            Name = "Incredible Frozen Table",
                            Price = 86.78m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 2,
                            Description = "Dolores explicabo voluptatem.",
                            Name = "Refined Metal Shirt",
                            Price = 74.27m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 3,
                            Description = "Necessitatibus qui voluptatem quasi consequatur corporis.",
                            Name = "Awesome Plastic Keyboard",
                            Price = 71.51m,
                            RestaurantId = 3
                        },
                        new
                        {
                            MenuItemId = 4,
                            Description = "Dolore incidunt atque consectetur odit reprehenderit.",
                            Name = "Generic Rubber Fish",
                            Price = 78.11m,
                            RestaurantId = 3
                        },
                        new
                        {
                            MenuItemId = 5,
                            Description = "Sapiente molestiae sint recusandae sed in delectus maiores.",
                            Name = "Sleek Metal Bike",
                            Price = 57.48m,
                            RestaurantId = 4
                        },
                        new
                        {
                            MenuItemId = 6,
                            Description = "Et eum expedita voluptatem et odio voluptatibus nulla ipsum laborum.",
                            Name = "Licensed Granite Bike",
                            Price = 51.93m,
                            RestaurantId = 3
                        },
                        new
                        {
                            MenuItemId = 7,
                            Description = "Laboriosam quod itaque aliquid.",
                            Name = "Tasty Metal Fish",
                            Price = 88.83m,
                            RestaurantId = 3
                        },
                        new
                        {
                            MenuItemId = 8,
                            Description = "Alias quo voluptatem aut dolores fuga beatae praesentium dolor nihil.",
                            Name = "Awesome Concrete Salad",
                            Price = 35.62m,
                            RestaurantId = 2
                        },
                        new
                        {
                            MenuItemId = 9,
                            Description = "Asperiores eum vitae.",
                            Name = "Licensed Frozen Cheese",
                            Price = 27.45m,
                            RestaurantId = 2
                        },
                        new
                        {
                            MenuItemId = 10,
                            Description = "Molestias dolorem voluptatum rerum et.",
                            Name = "Small Concrete Shirt",
                            Price = 10.08m,
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 28, 23, 1, 53, 72, DateTimeKind.Local).AddTicks(7688),
                            ReservationId = 9
                        },
                        new
                        {
                            OrderId = 2,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 29, 5, 30, 34, 653, DateTimeKind.Local).AddTicks(4989),
                            ReservationId = 8
                        },
                        new
                        {
                            OrderId = 3,
                            EmployeeId = 6,
                            OrderDate = new DateTime(2023, 12, 29, 1, 24, 33, 36, DateTimeKind.Local).AddTicks(2974),
                            ReservationId = 9
                        },
                        new
                        {
                            OrderId = 4,
                            EmployeeId = 7,
                            OrderDate = new DateTime(2023, 12, 29, 5, 14, 44, 325, DateTimeKind.Local).AddTicks(9098),
                            ReservationId = 6
                        },
                        new
                        {
                            OrderId = 5,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 28, 15, 47, 33, 841, DateTimeKind.Local).AddTicks(724),
                            ReservationId = 4
                        },
                        new
                        {
                            OrderId = 6,
                            EmployeeId = 6,
                            OrderDate = new DateTime(2023, 12, 28, 16, 45, 54, 583, DateTimeKind.Local).AddTicks(2861),
                            ReservationId = 5
                        },
                        new
                        {
                            OrderId = 7,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 28, 17, 26, 4, 930, DateTimeKind.Local).AddTicks(4434),
                            ReservationId = 7
                        },
                        new
                        {
                            OrderId = 8,
                            EmployeeId = 2,
                            OrderDate = new DateTime(2023, 12, 29, 7, 59, 34, 633, DateTimeKind.Local).AddTicks(5603),
                            ReservationId = 8
                        },
                        new
                        {
                            OrderId = 9,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 29, 3, 39, 16, 698, DateTimeKind.Local).AddTicks(6180),
                            ReservationId = 3
                        },
                        new
                        {
                            OrderId = 10,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 12, 29, 5, 25, 32, 718, DateTimeKind.Local).AddTicks(1195),
                            ReservationId = 6
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"), 1L, 1);

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            MenuItemId = 7,
                            OrderId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 2,
                            MenuItemId = 4,
                            OrderId = 10,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 3,
                            MenuItemId = 3,
                            OrderId = 9,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 4,
                            MenuItemId = 1,
                            OrderId = 8,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 5,
                            MenuItemId = 8,
                            OrderId = 9,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 6,
                            MenuItemId = 9,
                            OrderId = 9,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 7,
                            MenuItemId = 7,
                            OrderId = 4,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 8,
                            MenuItemId = 9,
                            OrderId = 9,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 9,
                            MenuItemId = 7,
                            OrderId = 8,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 10,
                            MenuItemId = 8,
                            OrderId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 11,
                            MenuItemId = 8,
                            OrderId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 12,
                            MenuItemId = 6,
                            OrderId = 1,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 13,
                            MenuItemId = 7,
                            OrderId = 8,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 14,
                            MenuItemId = 9,
                            OrderId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 15,
                            MenuItemId = 6,
                            OrderId = 8,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 16,
                            MenuItemId = 4,
                            OrderId = 4,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 17,
                            MenuItemId = 9,
                            OrderId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 18,
                            MenuItemId = 7,
                            OrderId = 4,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 19,
                            MenuItemId = 4,
                            OrderId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 20,
                            MenuItemId = 9,
                            OrderId = 2,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            CustomerId = 8,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 10, 14, 8, 6, 8, 216, DateTimeKind.Local).AddTicks(4940),
                            RestaurantId = 2,
                            TableId = 1
                        },
                        new
                        {
                            ReservationId = 2,
                            CustomerId = 4,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 3, 20, 22, 20, 58, 597, DateTimeKind.Local).AddTicks(1765),
                            RestaurantId = 5,
                            TableId = 5
                        },
                        new
                        {
                            ReservationId = 3,
                            CustomerId = 5,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 7, 3, 4, 37, 30, 966, DateTimeKind.Local).AddTicks(841),
                            RestaurantId = 5,
                            TableId = 7
                        },
                        new
                        {
                            ReservationId = 4,
                            CustomerId = 3,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 12, 20, 17, 33, 51, 773, DateTimeKind.Local).AddTicks(7059),
                            RestaurantId = 5,
                            TableId = 5
                        },
                        new
                        {
                            ReservationId = 5,
                            CustomerId = 9,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 1, 16, 17, 41, 5, 61, DateTimeKind.Local).AddTicks(9292),
                            RestaurantId = 1,
                            TableId = 1
                        },
                        new
                        {
                            ReservationId = 6,
                            CustomerId = 4,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 6, 5, 19, 42, 59, 490, DateTimeKind.Local).AddTicks(3556),
                            RestaurantId = 2,
                            TableId = 6
                        },
                        new
                        {
                            ReservationId = 7,
                            CustomerId = 2,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 11, 24, 5, 49, 9, 435, DateTimeKind.Local).AddTicks(8012),
                            RestaurantId = 2,
                            TableId = 1
                        },
                        new
                        {
                            ReservationId = 8,
                            CustomerId = 4,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 6, 10, 14, 19, 21, 97, DateTimeKind.Local).AddTicks(833),
                            RestaurantId = 3,
                            TableId = 7
                        },
                        new
                        {
                            ReservationId = 9,
                            CustomerId = 5,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 11, 19, 22, 42, 3, 174, DateTimeKind.Local).AddTicks(3164),
                            RestaurantId = 2,
                            TableId = 8
                        },
                        new
                        {
                            ReservationId = 10,
                            CustomerId = 1,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 8, 24, 4, 22, 48, 243, DateTimeKind.Local).AddTicks(8043),
                            RestaurantId = 4,
                            TableId = 8
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            Address = "86999 Waters Road, Schoenfort, Tunisia",
                            EndTime = new TimeOnly(18, 0, 0),
                            Name = "Schroeder Inc",
                            PhoneNumber = "440.718.3975 x17355",
                            StartTime = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 2,
                            Address = "0353 Scotty Divide, East Dejonview, Tajikistan",
                            EndTime = new TimeOnly(22, 0, 0),
                            Name = "Feest Inc",
                            PhoneNumber = "(834) 509-2851",
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 3,
                            Address = "25606 Runte Divide, Lake Clyde, Ghana",
                            EndTime = new TimeOnly(22, 0, 0),
                            Name = "Dibbert LLC",
                            PhoneNumber = "634-270-4788",
                            StartTime = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 4,
                            Address = "47516 Rhoda Mall, North Letitia, Guinea-Bissau",
                            EndTime = new TimeOnly(18, 0, 0),
                            Name = "Kerluke Inc",
                            PhoneNumber = "1-346-220-8025 x7451",
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 5,
                            Address = "842 Stefanie Courts, Wintheiserstad, San Marino",
                            EndTime = new TimeOnly(18, 0, 0),
                            Name = "Gerhold and Sons",
                            PhoneNumber = "(752) 533-5199 x52895",
                            StartTime = new TimeOnly(6, 0, 0)
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Capacity = 7,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 2,
                            Capacity = 7,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 3,
                            Capacity = 3,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 4,
                            Capacity = 4,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 5,
                            Capacity = 8,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 6,
                            Capacity = 7,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 7,
                            Capacity = 6,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 8,
                            Capacity = 2,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 9,
                            Capacity = 6,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 10,
                            Capacity = 5,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 11,
                            Capacity = 6,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 12,
                            Capacity = 8,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 13,
                            Capacity = 6,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 14,
                            Capacity = 6,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 15,
                            Capacity = 8,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 16,
                            Capacity = 2,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 17,
                            Capacity = 5,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 18,
                            Capacity = 2,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 19,
                            Capacity = 2,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 20,
                            Capacity = 5,
                            RestaurantId = 2
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Employee", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany("Employees")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.MenuItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Order", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Reservation", "Reservation")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.OrderItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Reservation", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany("Reservations")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Table", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.MenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Reservation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Restaurant", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("MenuItems");

                    b.Navigation("Reservations");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
