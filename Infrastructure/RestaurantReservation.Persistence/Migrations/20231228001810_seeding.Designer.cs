// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReservation.Application;

#nullable disable

namespace RestaurantReservation.Application.Migrations
{
    [DbContext(typeof(RestaurantReservationDbContext))]
    [Migration("20231228001810_seeding")]
    partial class seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RestaurantReservation.Db.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "Asa_Bartell@yahoo.com",
                            FirstName = "Moshe",
                            LastName = "Wisoky",
                            PhoneNumber = "1-652-732-3001 x851"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "Enola.Runolfsdottir54@yahoo.com",
                            FirstName = "Loraine",
                            LastName = "Predovic",
                            PhoneNumber = "(682) 289-7697 x06683"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "Arnaldo_Rutherford@yahoo.com",
                            FirstName = "Lori",
                            LastName = "MacGyver",
                            PhoneNumber = "739.360.4252"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "Mckayla.Bins66@yahoo.com",
                            FirstName = "Keely",
                            LastName = "Hagenes",
                            PhoneNumber = "422-276-9201 x024"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "Saul_Mitchell74@yahoo.com",
                            FirstName = "Sister",
                            LastName = "Kling",
                            PhoneNumber = "1-887-318-3343 x973"
                        },
                        new
                        {
                            CustomerId = 6,
                            Email = "Kendrick60@hotmail.com",
                            FirstName = "Abelardo",
                            LastName = "Collier",
                            PhoneNumber = "1-940-768-4873 x0005"
                        },
                        new
                        {
                            CustomerId = 7,
                            Email = "Tomasa_DAmore79@gmail.com",
                            FirstName = "Anya",
                            LastName = "Tromp",
                            PhoneNumber = "(488) 917-5617 x151"
                        },
                        new
                        {
                            CustomerId = 8,
                            Email = "Audrey.Kutch61@hotmail.com",
                            FirstName = "Aniya",
                            LastName = "Glover",
                            PhoneNumber = "(380) 916-6502 x54015"
                        },
                        new
                        {
                            CustomerId = 9,
                            Email = "Alia.Corkery@gmail.com",
                            FirstName = "Hank",
                            LastName = "Trantow",
                            PhoneNumber = "430.467.0597 x85572"
                        },
                        new
                        {
                            CustomerId = 10,
                            Email = "Rosanna.Hintz37@hotmail.com",
                            FirstName = "Brooklyn",
                            LastName = "Lynch",
                            PhoneNumber = "306.418.8869"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Megan",
                            LastName = "Reinger",
                            Position = "Regional Program Engineer",
                            RestaurantId = 2
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Gladys",
                            LastName = "Breitenberg",
                            Position = "Senior Assurance Agent",
                            RestaurantId = 4
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Rosemary",
                            LastName = "Daugherty",
                            Position = "Chief Accounts Coordinator",
                            RestaurantId = 5
                        },
                        new
                        {
                            EmployeeId = 4,
                            FirstName = "Mable",
                            LastName = "Lesch",
                            Position = "Direct Web Orchestrator",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 5,
                            FirstName = "Sara",
                            LastName = "Rippin",
                            Position = "Regional Quality Supervisor",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 6,
                            FirstName = "Greg",
                            LastName = "Koss",
                            Position = "Principal Accounts Technician",
                            RestaurantId = 5
                        },
                        new
                        {
                            EmployeeId = 7,
                            FirstName = "Diane",
                            LastName = "Bernier",
                            Position = "Regional Solutions Consultant",
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            Description = "Dolore ut porro ut.",
                            Name = "Ergonomic Plastic Salad",
                            Price = 15.33m,
                            RestaurantId = 1
                        },
                        new
                        {
                            MenuItemId = 2,
                            Description = "Assumenda quo et.",
                            Name = "Practical Frozen Pants",
                            Price = 56.42m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 3,
                            Description = "Molestiae aut fugit minima dolores.",
                            Name = "Rustic Plastic Bacon",
                            Price = 38.80m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 4,
                            Description = "Reprehenderit ullam accusantium quas illo fuga voluptatem impedit.",
                            Name = "Sleek Cotton Ball",
                            Price = 64.72m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 5,
                            Description = "Repellendus molestiae aut est repellat omnis ut quisquam.",
                            Name = "Fantastic Frozen Tuna",
                            Price = 97.64m,
                            RestaurantId = 1
                        },
                        new
                        {
                            MenuItemId = 6,
                            Description = "Facere eligendi aliquid.",
                            Name = "Tasty Cotton Ball",
                            Price = 97.47m,
                            RestaurantId = 3
                        },
                        new
                        {
                            MenuItemId = 7,
                            Description = "Voluptas omnis hic atque omnis.",
                            Name = "Unbranded Fresh Chair",
                            Price = 77.86m,
                            RestaurantId = 1
                        },
                        new
                        {
                            MenuItemId = 8,
                            Description = "Sapiente dolorum eveniet necessitatibus quasi et nihil facilis atque.",
                            Name = "Licensed Wooden Table",
                            Price = 62.40m,
                            RestaurantId = 1
                        },
                        new
                        {
                            MenuItemId = 9,
                            Description = "In dolor nisi rerum.",
                            Name = "Rustic Plastic Soap",
                            Price = 97.83m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 10,
                            Description = "Excepturi voluptas consectetur illum qui.",
                            Name = "Awesome Rubber Chips",
                            Price = 80.59m,
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            EmployeeId = 7,
                            OrderDate = new DateTime(2023, 12, 27, 16, 46, 18, 409, DateTimeKind.Local).AddTicks(8229),
                            ReservationId = 5
                        },
                        new
                        {
                            OrderId = 2,
                            EmployeeId = 5,
                            OrderDate = new DateTime(2023, 12, 27, 14, 51, 42, 377, DateTimeKind.Local).AddTicks(5486),
                            ReservationId = 7
                        },
                        new
                        {
                            OrderId = 3,
                            EmployeeId = 3,
                            OrderDate = new DateTime(2023, 12, 27, 9, 28, 50, 725, DateTimeKind.Local).AddTicks(1856),
                            ReservationId = 5
                        },
                        new
                        {
                            OrderId = 4,
                            EmployeeId = 6,
                            OrderDate = new DateTime(2023, 12, 27, 17, 24, 19, 567, DateTimeKind.Local).AddTicks(2936),
                            ReservationId = 1
                        },
                        new
                        {
                            OrderId = 5,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 27, 13, 51, 18, 451, DateTimeKind.Local).AddTicks(5550),
                            ReservationId = 7
                        },
                        new
                        {
                            OrderId = 6,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 27, 15, 29, 36, 364, DateTimeKind.Local).AddTicks(9837),
                            ReservationId = 5
                        },
                        new
                        {
                            OrderId = 7,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 27, 13, 31, 46, 762, DateTimeKind.Local).AddTicks(4958),
                            ReservationId = 2
                        },
                        new
                        {
                            OrderId = 8,
                            EmployeeId = 6,
                            OrderDate = new DateTime(2023, 12, 27, 16, 23, 14, 526, DateTimeKind.Local).AddTicks(6457),
                            ReservationId = 10
                        },
                        new
                        {
                            OrderId = 9,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 27, 3, 17, 57, 659, DateTimeKind.Local).AddTicks(5029),
                            ReservationId = 5
                        },
                        new
                        {
                            OrderId = 10,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 12, 27, 3, 28, 23, 519, DateTimeKind.Local).AddTicks(7504),
                            ReservationId = 2
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"), 1L, 1);

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            MenuItemId = 6,
                            OrderId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 2,
                            MenuItemId = 4,
                            OrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 3,
                            MenuItemId = 7,
                            OrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 4,
                            MenuItemId = 1,
                            OrderId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 5,
                            MenuItemId = 9,
                            OrderId = 9,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 6,
                            MenuItemId = 2,
                            OrderId = 8,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 7,
                            MenuItemId = 4,
                            OrderId = 5,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 8,
                            MenuItemId = 1,
                            OrderId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 9,
                            MenuItemId = 6,
                            OrderId = 5,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 10,
                            MenuItemId = 5,
                            OrderId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 11,
                            MenuItemId = 2,
                            OrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 12,
                            MenuItemId = 2,
                            OrderId = 6,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 13,
                            MenuItemId = 6,
                            OrderId = 8,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 14,
                            MenuItemId = 2,
                            OrderId = 3,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 15,
                            MenuItemId = 2,
                            OrderId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 16,
                            MenuItemId = 3,
                            OrderId = 10,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 17,
                            MenuItemId = 6,
                            OrderId = 9,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 18,
                            MenuItemId = 10,
                            OrderId = 7,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 19,
                            MenuItemId = 10,
                            OrderId = 5,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 20,
                            MenuItemId = 3,
                            OrderId = 1,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            CustomerId = 7,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 1, 22, 10, 3, 2, 711, DateTimeKind.Local).AddTicks(5425),
                            RestaurantId = 2,
                            TableId = 8
                        },
                        new
                        {
                            ReservationId = 2,
                            CustomerId = 9,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 5, 25, 20, 4, 36, 571, DateTimeKind.Local).AddTicks(104),
                            RestaurantId = 4,
                            TableId = 5
                        },
                        new
                        {
                            ReservationId = 3,
                            CustomerId = 8,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 5, 6, 18, 13, 35, 955, DateTimeKind.Local).AddTicks(7257),
                            RestaurantId = 4,
                            TableId = 1
                        },
                        new
                        {
                            ReservationId = 4,
                            CustomerId = 6,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 9, 19, 15, 45, 52, 972, DateTimeKind.Local).AddTicks(5905),
                            RestaurantId = 1,
                            TableId = 1
                        },
                        new
                        {
                            ReservationId = 5,
                            CustomerId = 4,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 9, 21, 0, 12, 52, 501, DateTimeKind.Local).AddTicks(3174),
                            RestaurantId = 2,
                            TableId = 5
                        },
                        new
                        {
                            ReservationId = 6,
                            CustomerId = 1,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 10, 11, 21, 45, 2, 591, DateTimeKind.Local).AddTicks(6752),
                            RestaurantId = 2,
                            TableId = 7
                        },
                        new
                        {
                            ReservationId = 7,
                            CustomerId = 1,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 11, 28, 9, 31, 49, 719, DateTimeKind.Local).AddTicks(6055),
                            RestaurantId = 1,
                            TableId = 10
                        },
                        new
                        {
                            ReservationId = 8,
                            CustomerId = 8,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 4, 6, 0, 35, 29, 486, DateTimeKind.Local).AddTicks(1394),
                            RestaurantId = 5,
                            TableId = 8
                        },
                        new
                        {
                            ReservationId = 9,
                            CustomerId = 8,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 4, 1, 12, 24, 54, 777, DateTimeKind.Local).AddTicks(3867),
                            RestaurantId = 2,
                            TableId = 9
                        },
                        new
                        {
                            ReservationId = 10,
                            CustomerId = 10,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 2, 7, 7, 48, 28, 70, DateTimeKind.Local).AddTicks(6795),
                            RestaurantId = 1,
                            TableId = 6
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            Address = "702 Homenick Flat, Larissahaven, Bhutan",
                            EndTime = new TimeOnly(21, 0, 0),
                            Name = "King, Ferry and Schmeler",
                            PhoneNumber = "334-483-1332 x568",
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 2,
                            Address = "18336 Schaefer Estate, Durganshire, Puerto Rico",
                            EndTime = new TimeOnly(18, 0, 0),
                            Name = "Rice Group",
                            PhoneNumber = "1-284-235-7793",
                            StartTime = new TimeOnly(6, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 3,
                            Address = "2176 Virginia Knoll, South Aracelystad, Gabon",
                            EndTime = new TimeOnly(18, 0, 0),
                            Name = "Kassulke - Haley",
                            PhoneNumber = "227.733.9483",
                            StartTime = new TimeOnly(6, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 4,
                            Address = "11913 Macejkovic Corners, South Kellen, Egypt",
                            EndTime = new TimeOnly(21, 0, 0),
                            Name = "Powlowski LLC",
                            PhoneNumber = "(219) 769-7389 x7293",
                            StartTime = new TimeOnly(6, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 5,
                            Address = "8265 Kyra Fall, Carterburgh, Wallis and Futuna",
                            EndTime = new TimeOnly(20, 0, 0),
                            Name = "Will LLC",
                            PhoneNumber = "(713) 690-9370",
                            StartTime = new TimeOnly(9, 0, 0)
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Capacity = 7,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 2,
                            Capacity = 5,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 3,
                            Capacity = 6,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 4,
                            Capacity = 5,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 5,
                            Capacity = 8,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 6,
                            Capacity = 4,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 7,
                            Capacity = 6,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 8,
                            Capacity = 8,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 9,
                            Capacity = 3,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 10,
                            Capacity = 7,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 11,
                            Capacity = 4,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 12,
                            Capacity = 5,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 13,
                            Capacity = 5,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 14,
                            Capacity = 3,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 15,
                            Capacity = 4,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 16,
                            Capacity = 8,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 17,
                            Capacity = 4,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 18,
                            Capacity = 6,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 19,
                            Capacity = 6,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 20,
                            Capacity = 4,
                            RestaurantId = 1
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Employee", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany("Employees")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.MenuItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Order", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Reservation", "Reservation")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.OrderItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Reservation", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany("Reservations")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Table", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.MenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Reservation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Restaurant", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("MenuItems");

                    b.Navigation("Reservations");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
