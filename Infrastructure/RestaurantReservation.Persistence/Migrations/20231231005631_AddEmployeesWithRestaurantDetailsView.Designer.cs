// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReservation.Application;

#nullable disable

namespace RestaurantReservation.Application.Migrations
{
    [DbContext(typeof(RestaurantReservationDbContext))]
    [Migration("20231231005631_AddEmployeesWithRestaurantDetailsView")]
    partial class AddEmployeesWithRestaurantDetailsView
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "Ronny53@hotmail.com",
                            FirstName = "Princess",
                            LastName = "Huels",
                            PhoneNumber = "460-745-2133 x22484"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "Antonio.Conroy34@hotmail.com",
                            FirstName = "Darren",
                            LastName = "Ferry",
                            PhoneNumber = "404-427-0683"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "Henriette72@gmail.com",
                            FirstName = "Lela",
                            LastName = "Padberg",
                            PhoneNumber = "994.347.2807 x88645"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "Gregoria_Jacobs38@gmail.com",
                            FirstName = "Nestor",
                            LastName = "Mueller",
                            PhoneNumber = "1-597-682-5793 x7396"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "Gaetano.Klein@yahoo.com",
                            FirstName = "Damon",
                            LastName = "Balistreri",
                            PhoneNumber = "285-788-2129"
                        },
                        new
                        {
                            CustomerId = 6,
                            Email = "Orlo_Little41@gmail.com",
                            FirstName = "Samantha",
                            LastName = "Greenholt",
                            PhoneNumber = "738.373.7544"
                        },
                        new
                        {
                            CustomerId = 7,
                            Email = "Alicia_Koss@yahoo.com",
                            FirstName = "Randal",
                            LastName = "McClure",
                            PhoneNumber = "997-350-9580"
                        },
                        new
                        {
                            CustomerId = 8,
                            Email = "Tamara_Walsh15@hotmail.com",
                            FirstName = "Tod",
                            LastName = "Johnston",
                            PhoneNumber = "669.278.3182 x035"
                        },
                        new
                        {
                            CustomerId = 9,
                            Email = "Shanny.Champlin@gmail.com",
                            FirstName = "Flo",
                            LastName = "Howe",
                            PhoneNumber = "1-370-348-9020"
                        },
                        new
                        {
                            CustomerId = 10,
                            Email = "Tyrese_Willms43@hotmail.com",
                            FirstName = "Devonte",
                            LastName = "Walsh",
                            PhoneNumber = "478.898.9002 x21230"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Hazel",
                            LastName = "Murray",
                            Position = "District Group Architect",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Kristen",
                            LastName = "Cummings",
                            Position = "Global Interactions Agent",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Chester",
                            LastName = "Moore",
                            Position = "Dynamic Accounts Specialist",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 4,
                            FirstName = "Jeannette",
                            LastName = "Pouros",
                            Position = "Future Infrastructure Associate",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 5,
                            FirstName = "Maryann",
                            LastName = "Hauck",
                            Position = "International Quality Agent",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 6,
                            FirstName = "Crystal",
                            LastName = "Swaniawski",
                            Position = "Product Solutions Coordinator",
                            RestaurantId = 2
                        },
                        new
                        {
                            EmployeeId = 7,
                            FirstName = "Allan",
                            LastName = "Yost",
                            Position = "Product Paradigm Designer",
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            Description = "Neque quod aut molestias.",
                            Name = "Ergonomic Fresh Chicken",
                            Price = 16.13m,
                            RestaurantId = 1
                        },
                        new
                        {
                            MenuItemId = 2,
                            Description = "Autem nam dicta est pariatur quisquam.",
                            Name = "Small Metal Table",
                            Price = 77.98m,
                            RestaurantId = 2
                        },
                        new
                        {
                            MenuItemId = 3,
                            Description = "Ut ex sapiente.",
                            Name = "Fantastic Metal Shoes",
                            Price = 39.85m,
                            RestaurantId = 2
                        },
                        new
                        {
                            MenuItemId = 4,
                            Description = "Cum ex eius dolorum fugiat laudantium numquam corporis.",
                            Name = "Refined Steel Mouse",
                            Price = 33.42m,
                            RestaurantId = 2
                        },
                        new
                        {
                            MenuItemId = 5,
                            Description = "Dicta et voluptatibus.",
                            Name = "Licensed Granite Pizza",
                            Price = 52.72m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 6,
                            Description = "Vel harum qui officia.",
                            Name = "Handmade Steel Chips",
                            Price = 33.30m,
                            RestaurantId = 1
                        },
                        new
                        {
                            MenuItemId = 7,
                            Description = "Et illum inventore eaque quaerat quae.",
                            Name = "Licensed Steel Towels",
                            Price = 84.51m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 8,
                            Description = "Dignissimos optio repellat dicta qui nihil.",
                            Name = "Fantastic Frozen Sausages",
                            Price = 17.64m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 9,
                            Description = "Tenetur dolorem et tempore commodi animi.",
                            Name = "Incredible Soft Hat",
                            Price = 83.79m,
                            RestaurantId = 3
                        },
                        new
                        {
                            MenuItemId = 10,
                            Description = "Nemo repudiandae cumque ad.",
                            Name = "Gorgeous Steel Mouse",
                            Price = 57.77m,
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            EmployeeId = 6,
                            OrderDate = new DateTime(2023, 12, 30, 17, 15, 42, 863, DateTimeKind.Local).AddTicks(9247),
                            ReservationId = 7
                        },
                        new
                        {
                            OrderId = 2,
                            EmployeeId = 6,
                            OrderDate = new DateTime(2023, 12, 30, 9, 31, 19, 146, DateTimeKind.Local).AddTicks(8881),
                            ReservationId = 9
                        },
                        new
                        {
                            OrderId = 3,
                            EmployeeId = 5,
                            OrderDate = new DateTime(2023, 12, 30, 4, 45, 13, 789, DateTimeKind.Local).AddTicks(9781),
                            ReservationId = 8
                        },
                        new
                        {
                            OrderId = 4,
                            EmployeeId = 7,
                            OrderDate = new DateTime(2023, 12, 30, 7, 13, 17, 850, DateTimeKind.Local).AddTicks(7883),
                            ReservationId = 9
                        },
                        new
                        {
                            OrderId = 5,
                            EmployeeId = 3,
                            OrderDate = new DateTime(2023, 12, 30, 16, 21, 45, 519, DateTimeKind.Local).AddTicks(1391),
                            ReservationId = 9
                        },
                        new
                        {
                            OrderId = 6,
                            EmployeeId = 7,
                            OrderDate = new DateTime(2023, 12, 31, 0, 0, 21, 737, DateTimeKind.Local).AddTicks(9882),
                            ReservationId = 4
                        },
                        new
                        {
                            OrderId = 7,
                            EmployeeId = 2,
                            OrderDate = new DateTime(2023, 12, 30, 13, 59, 43, 249, DateTimeKind.Local).AddTicks(3411),
                            ReservationId = 9
                        },
                        new
                        {
                            OrderId = 8,
                            EmployeeId = 5,
                            OrderDate = new DateTime(2023, 12, 31, 1, 54, 55, 142, DateTimeKind.Local).AddTicks(8210),
                            ReservationId = 5
                        },
                        new
                        {
                            OrderId = 9,
                            EmployeeId = 6,
                            OrderDate = new DateTime(2023, 12, 31, 1, 1, 11, 806, DateTimeKind.Local).AddTicks(1680),
                            ReservationId = 10
                        },
                        new
                        {
                            OrderId = 10,
                            EmployeeId = 3,
                            OrderDate = new DateTime(2023, 12, 30, 13, 47, 19, 258, DateTimeKind.Local).AddTicks(5911),
                            ReservationId = 7
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"), 1L, 1);

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            MenuItemId = 10,
                            OrderId = 7,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 2,
                            MenuItemId = 1,
                            OrderId = 8,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 3,
                            MenuItemId = 8,
                            OrderId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 4,
                            MenuItemId = 4,
                            OrderId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 5,
                            MenuItemId = 9,
                            OrderId = 7,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 6,
                            MenuItemId = 4,
                            OrderId = 9,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 7,
                            MenuItemId = 3,
                            OrderId = 10,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 8,
                            MenuItemId = 10,
                            OrderId = 4,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 9,
                            MenuItemId = 1,
                            OrderId = 10,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 10,
                            MenuItemId = 5,
                            OrderId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 11,
                            MenuItemId = 3,
                            OrderId = 8,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 12,
                            MenuItemId = 9,
                            OrderId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 13,
                            MenuItemId = 9,
                            OrderId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 14,
                            MenuItemId = 5,
                            OrderId = 10,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 15,
                            MenuItemId = 6,
                            OrderId = 5,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 16,
                            MenuItemId = 6,
                            OrderId = 5,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 17,
                            MenuItemId = 1,
                            OrderId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 18,
                            MenuItemId = 10,
                            OrderId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 19,
                            MenuItemId = 5,
                            OrderId = 1,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 20,
                            MenuItemId = 10,
                            OrderId = 1,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            CustomerId = 8,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 11, 16, 0, 8, 1, 387, DateTimeKind.Local).AddTicks(4238),
                            RestaurantId = 3,
                            TableId = 8
                        },
                        new
                        {
                            ReservationId = 2,
                            CustomerId = 9,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 10, 22, 6, 29, 15, 602, DateTimeKind.Local).AddTicks(5328),
                            RestaurantId = 3,
                            TableId = 6
                        },
                        new
                        {
                            ReservationId = 3,
                            CustomerId = 6,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 7, 9, 13, 56, 29, 525, DateTimeKind.Local).AddTicks(862),
                            RestaurantId = 4,
                            TableId = 4
                        },
                        new
                        {
                            ReservationId = 4,
                            CustomerId = 7,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 12, 12, 3, 44, 9, 105, DateTimeKind.Local).AddTicks(4673),
                            RestaurantId = 2,
                            TableId = 9
                        },
                        new
                        {
                            ReservationId = 5,
                            CustomerId = 6,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 8, 7, 22, 7, 47, 891, DateTimeKind.Local).AddTicks(1441),
                            RestaurantId = 3,
                            TableId = 6
                        },
                        new
                        {
                            ReservationId = 6,
                            CustomerId = 4,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 6, 2, 0, 25, 56, 41, DateTimeKind.Local).AddTicks(9403),
                            RestaurantId = 3,
                            TableId = 6
                        },
                        new
                        {
                            ReservationId = 7,
                            CustomerId = 8,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 10, 7, 3, 48, 45, 757, DateTimeKind.Local).AddTicks(6457),
                            RestaurantId = 1,
                            TableId = 2
                        },
                        new
                        {
                            ReservationId = 8,
                            CustomerId = 2,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 9, 17, 3, 50, 33, 672, DateTimeKind.Local).AddTicks(8242),
                            RestaurantId = 2,
                            TableId = 2
                        },
                        new
                        {
                            ReservationId = 9,
                            CustomerId = 10,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 4, 5, 9, 23, 18, 728, DateTimeKind.Local).AddTicks(8540),
                            RestaurantId = 1,
                            TableId = 10
                        },
                        new
                        {
                            ReservationId = 10,
                            CustomerId = 8,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 8, 24, 0, 38, 34, 3, DateTimeKind.Local).AddTicks(1440),
                            RestaurantId = 4,
                            TableId = 1
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.ReservationsDetailsView", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("ReservationsDetailsView");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            Address = "25594 Feil Pine, Bryanastad, New Zealand",
                            EndTime = new TimeOnly(19, 0, 0),
                            Name = "Koss and Sons",
                            PhoneNumber = "885.671.0751",
                            StartTime = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 2,
                            Address = "836 Leannon Alley, Haleymouth, Portugal",
                            EndTime = new TimeOnly(18, 0, 0),
                            Name = "Kilback - Heathcote",
                            PhoneNumber = "1-575-955-1292 x8203",
                            StartTime = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 3,
                            Address = "108 Scotty River, Port Abraham, Jamaica",
                            EndTime = new TimeOnly(18, 0, 0),
                            Name = "Ledner - Larkin",
                            PhoneNumber = "675-229-1193",
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 4,
                            Address = "2485 Marie Course, Michealmouth, Japan",
                            EndTime = new TimeOnly(20, 0, 0),
                            Name = "Jast - Wintheiser",
                            PhoneNumber = "843-645-2610",
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 5,
                            Address = "4121 Shayne Stravenue, Malachichester, Netherlands",
                            EndTime = new TimeOnly(21, 0, 0),
                            Name = "Bailey LLC",
                            PhoneNumber = "714-762-1801 x58382",
                            StartTime = new TimeOnly(10, 0, 0)
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.RestaurantReservation.Db.Entities.EmployeesWithRestaurantDetailsView", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("EmployeesWithRestaurantDetailsView");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Capacity = 7,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 2,
                            Capacity = 3,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 3,
                            Capacity = 7,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 4,
                            Capacity = 5,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 5,
                            Capacity = 5,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 6,
                            Capacity = 3,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 7,
                            Capacity = 8,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 8,
                            Capacity = 5,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 9,
                            Capacity = 3,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 10,
                            Capacity = 7,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 11,
                            Capacity = 3,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 12,
                            Capacity = 7,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 13,
                            Capacity = 2,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 14,
                            Capacity = 3,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 15,
                            Capacity = 5,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 16,
                            Capacity = 6,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 17,
                            Capacity = 4,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 18,
                            Capacity = 3,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 19,
                            Capacity = 5,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 20,
                            Capacity = 6,
                            RestaurantId = 4
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Employee", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Restaurant", "Restaurant")
                        .WithMany("Employees")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.MenuItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Order", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entities.Reservation", "Reservation")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.OrderItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Reservation", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entities.Restaurant", "Restaurant")
                        .WithMany("Reservations")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entities.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Table", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.MenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Reservation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Restaurant", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("MenuItems");

                    b.Navigation("Reservations");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
