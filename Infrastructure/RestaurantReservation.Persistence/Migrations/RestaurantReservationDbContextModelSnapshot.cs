// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReservation.Application;
using RestaurantReservation.Persistence;

#nullable disable

namespace RestaurantReservation.Application.Migrations
{
    [DbContext(typeof(RestaurantReservationDbContext))]
    partial class RestaurantReservationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "Madilyn_Howe@gmail.com",
                            FirstName = "Noel",
                            LastName = "O'Kon",
                            PhoneNumber = "277-628-9598 x943"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "Merl89@gmail.com",
                            FirstName = "Zelma",
                            LastName = "Koss",
                            PhoneNumber = "342-491-5927 x42627"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "Deontae83@gmail.com",
                            FirstName = "Charlene",
                            LastName = "Parker",
                            PhoneNumber = "625.248.0512 x1382"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "Jamey.Windler@hotmail.com",
                            FirstName = "Russell",
                            LastName = "Blick",
                            PhoneNumber = "(901) 405-3625 x62300"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "Hellen41@yahoo.com",
                            FirstName = "Wallace",
                            LastName = "Brakus",
                            PhoneNumber = "1-583-453-0987"
                        },
                        new
                        {
                            CustomerId = 6,
                            Email = "Hildegard.Schneider@gmail.com",
                            FirstName = "Edison",
                            LastName = "Cruickshank",
                            PhoneNumber = "(540) 356-7963 x215"
                        },
                        new
                        {
                            CustomerId = 7,
                            Email = "Joshua47@yahoo.com",
                            FirstName = "Camylle",
                            LastName = "Nader",
                            PhoneNumber = "(883) 309-3715 x47699"
                        },
                        new
                        {
                            CustomerId = 8,
                            Email = "Jeromy_Sauer10@yahoo.com",
                            FirstName = "Bernardo",
                            LastName = "Veum",
                            PhoneNumber = "(382) 219-4086"
                        },
                        new
                        {
                            CustomerId = 9,
                            Email = "Marcelino_Rippin@gmail.com",
                            FirstName = "Euna",
                            LastName = "Ebert",
                            PhoneNumber = "846-243-4823"
                        },
                        new
                        {
                            CustomerId = 10,
                            Email = "Maud_Prohaska5@gmail.com",
                            FirstName = "Whitney",
                            LastName = "Flatley",
                            PhoneNumber = "840.617.7224 x95109"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Suzanne",
                            LastName = "Deckow",
                            Position = "Human Web Designer",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Sylvia",
                            LastName = "Rice",
                            Position = "Senior Data Officer",
                            RestaurantId = 4
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Kristen",
                            LastName = "Hessel",
                            Position = "Principal Quality Executive",
                            RestaurantId = 5
                        },
                        new
                        {
                            EmployeeId = 4,
                            FirstName = "Joanna",
                            LastName = "Feeney",
                            Position = "Dynamic Optimization Supervisor",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 5,
                            FirstName = "Robyn",
                            LastName = "Beer",
                            Position = "Corporate Marketing Planner",
                            RestaurantId = 4
                        },
                        new
                        {
                            EmployeeId = 6,
                            FirstName = "Bert",
                            LastName = "Balistreri",
                            Position = "Future Accounts Agent",
                            RestaurantId = 2
                        },
                        new
                        {
                            EmployeeId = 7,
                            FirstName = "Gladys",
                            LastName = "Watsica",
                            Position = "Dynamic Marketing Engineer",
                            RestaurantId = 4
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            Description = "Consectetur quis perferendis distinctio voluptatibus modi tempora eum laborum.",
                            Name = "Practical Frozen Mouse",
                            Price = 95.43m,
                            RestaurantId = 4
                        },
                        new
                        {
                            MenuItemId = 2,
                            Description = "Facere nulla ut est ipsum vel praesentium hic voluptatibus maiores.",
                            Name = "Tasty Plastic Chicken",
                            Price = 30.69m,
                            RestaurantId = 4
                        },
                        new
                        {
                            MenuItemId = 3,
                            Description = "Blanditiis rerum qui autem et necessitatibus quis.",
                            Name = "Ergonomic Frozen Keyboard",
                            Price = 63.66m,
                            RestaurantId = 3
                        },
                        new
                        {
                            MenuItemId = 4,
                            Description = "Eaque nam est sint.",
                            Name = "Ergonomic Rubber Car",
                            Price = 96.13m,
                            RestaurantId = 2
                        },
                        new
                        {
                            MenuItemId = 5,
                            Description = "Ipsum quas voluptas temporibus ab sint.",
                            Name = "Rustic Steel Ball",
                            Price = 80.43m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 6,
                            Description = "Non dolorem sed.",
                            Name = "Fantastic Granite Table",
                            Price = 57.82m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 7,
                            Description = "Est accusamus vel ipsum autem excepturi aut laudantium molestiae repellat.",
                            Name = "Refined Granite Gloves",
                            Price = 18.12m,
                            RestaurantId = 4
                        },
                        new
                        {
                            MenuItemId = 8,
                            Description = "Laudantium fuga ipsam magnam aut.",
                            Name = "Refined Fresh Chicken",
                            Price = 32.60m,
                            RestaurantId = 5
                        },
                        new
                        {
                            MenuItemId = 9,
                            Description = "Et sint modi sit.",
                            Name = "Small Soft Ball",
                            Price = 45.92m,
                            RestaurantId = 3
                        },
                        new
                        {
                            MenuItemId = 10,
                            Description = "Amet non qui voluptate incidunt.",
                            Name = "Unbranded Frozen Chair",
                            Price = 63.62m,
                            RestaurantId = 4
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 12, 31, 8, 8, 6, 466, DateTimeKind.Local).AddTicks(1562),
                            ReservationId = 5
                        },
                        new
                        {
                            OrderId = 2,
                            EmployeeId = 5,
                            OrderDate = new DateTime(2023, 12, 31, 3, 26, 37, 444, DateTimeKind.Local).AddTicks(8643),
                            ReservationId = 8
                        },
                        new
                        {
                            OrderId = 3,
                            EmployeeId = 2,
                            OrderDate = new DateTime(2023, 12, 30, 15, 12, 47, 631, DateTimeKind.Local).AddTicks(3940),
                            ReservationId = 6
                        },
                        new
                        {
                            OrderId = 4,
                            EmployeeId = 3,
                            OrderDate = new DateTime(2023, 12, 30, 13, 10, 16, 118, DateTimeKind.Local).AddTicks(2406),
                            ReservationId = 2
                        },
                        new
                        {
                            OrderId = 5,
                            EmployeeId = 5,
                            OrderDate = new DateTime(2023, 12, 30, 17, 54, 50, 538, DateTimeKind.Local).AddTicks(6985),
                            ReservationId = 1
                        },
                        new
                        {
                            OrderId = 6,
                            EmployeeId = 3,
                            OrderDate = new DateTime(2023, 12, 31, 4, 9, 4, 588, DateTimeKind.Local).AddTicks(4142),
                            ReservationId = 7
                        },
                        new
                        {
                            OrderId = 7,
                            EmployeeId = 5,
                            OrderDate = new DateTime(2023, 12, 30, 16, 42, 39, 479, DateTimeKind.Local).AddTicks(4436),
                            ReservationId = 9
                        },
                        new
                        {
                            OrderId = 8,
                            EmployeeId = 6,
                            OrderDate = new DateTime(2023, 12, 30, 14, 56, 38, 726, DateTimeKind.Local).AddTicks(5772),
                            ReservationId = 9
                        },
                        new
                        {
                            OrderId = 9,
                            EmployeeId = 4,
                            OrderDate = new DateTime(2023, 12, 30, 19, 15, 50, 139, DateTimeKind.Local).AddTicks(1746),
                            ReservationId = 7
                        },
                        new
                        {
                            OrderId = 10,
                            EmployeeId = 5,
                            OrderDate = new DateTime(2023, 12, 31, 10, 34, 46, 223, DateTimeKind.Local).AddTicks(6785),
                            ReservationId = 9
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"), 1L, 1);

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            MenuItemId = 8,
                            OrderId = 5,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 2,
                            MenuItemId = 6,
                            OrderId = 10,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 3,
                            MenuItemId = 7,
                            OrderId = 2,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 4,
                            MenuItemId = 6,
                            OrderId = 8,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 5,
                            MenuItemId = 1,
                            OrderId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 6,
                            MenuItemId = 9,
                            OrderId = 5,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 7,
                            MenuItemId = 10,
                            OrderId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 8,
                            MenuItemId = 7,
                            OrderId = 8,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 9,
                            MenuItemId = 1,
                            OrderId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 10,
                            MenuItemId = 5,
                            OrderId = 5,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 11,
                            MenuItemId = 9,
                            OrderId = 8,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 12,
                            MenuItemId = 4,
                            OrderId = 10,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 13,
                            MenuItemId = 1,
                            OrderId = 9,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 14,
                            MenuItemId = 2,
                            OrderId = 6,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 15,
                            MenuItemId = 5,
                            OrderId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 16,
                            MenuItemId = 1,
                            OrderId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 17,
                            MenuItemId = 8,
                            OrderId = 4,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 18,
                            MenuItemId = 1,
                            OrderId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 19,
                            MenuItemId = 1,
                            OrderId = 1,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 20,
                            MenuItemId = 3,
                            OrderId = 10,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            CustomerId = 8,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 6, 23, 7, 5, 3, 241, DateTimeKind.Local).AddTicks(4571),
                            RestaurantId = 4,
                            TableId = 6
                        },
                        new
                        {
                            ReservationId = 2,
                            CustomerId = 6,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 7, 20, 2, 19, 13, 274, DateTimeKind.Local).AddTicks(4292),
                            RestaurantId = 1,
                            TableId = 10
                        },
                        new
                        {
                            ReservationId = 3,
                            CustomerId = 1,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 5, 15, 14, 47, 2, 859, DateTimeKind.Local).AddTicks(6590),
                            RestaurantId = 4,
                            TableId = 8
                        },
                        new
                        {
                            ReservationId = 4,
                            CustomerId = 2,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 6, 30, 13, 44, 11, 983, DateTimeKind.Local).AddTicks(4366),
                            RestaurantId = 2,
                            TableId = 1
                        },
                        new
                        {
                            ReservationId = 5,
                            CustomerId = 4,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 4, 24, 1, 54, 26, 951, DateTimeKind.Local).AddTicks(3680),
                            RestaurantId = 3,
                            TableId = 6
                        },
                        new
                        {
                            ReservationId = 6,
                            CustomerId = 8,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 11, 7, 8, 35, 59, 707, DateTimeKind.Local).AddTicks(5875),
                            RestaurantId = 3,
                            TableId = 4
                        },
                        new
                        {
                            ReservationId = 7,
                            CustomerId = 2,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 1, 25, 10, 55, 31, 390, DateTimeKind.Local).AddTicks(7451),
                            RestaurantId = 3,
                            TableId = 2
                        },
                        new
                        {
                            ReservationId = 8,
                            CustomerId = 1,
                            PartySize = 1,
                            ReservationDate = new DateTime(2024, 8, 23, 17, 1, 58, 665, DateTimeKind.Local).AddTicks(3939),
                            RestaurantId = 5,
                            TableId = 2
                        },
                        new
                        {
                            ReservationId = 9,
                            CustomerId = 8,
                            PartySize = 2,
                            ReservationDate = new DateTime(2024, 11, 30, 21, 47, 43, 25, DateTimeKind.Local).AddTicks(7024),
                            RestaurantId = 3,
                            TableId = 1
                        },
                        new
                        {
                            ReservationId = 10,
                            CustomerId = 2,
                            PartySize = 3,
                            ReservationDate = new DateTime(2024, 5, 17, 0, 35, 4, 528, DateTimeKind.Local).AddTicks(5136),
                            RestaurantId = 4,
                            TableId = 9
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.ReservationsDetailsView", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("ReservationsDetailsView");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            Address = "45937 Rath Lights, North Pink, Falkland Islands (Malvinas)",
                            EndTime = new TimeOnly(20, 0, 0),
                            Name = "Larson - Fadel",
                            PhoneNumber = "1-871-906-6169 x054",
                            StartTime = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 2,
                            Address = "656 Schneider Park, West Afton, Denmark",
                            EndTime = new TimeOnly(19, 0, 0),
                            Name = "Stoltenberg - Gorczany",
                            PhoneNumber = "882.245.3043",
                            StartTime = new TimeOnly(6, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 3,
                            Address = "24862 Herzog Mills, Shemarmouth, Russian Federation",
                            EndTime = new TimeOnly(20, 0, 0),
                            Name = "Strosin Group",
                            PhoneNumber = "233-917-9228 x642",
                            StartTime = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 4,
                            Address = "20391 Antone Flats, Lake Armani, Nepal",
                            EndTime = new TimeOnly(18, 0, 0),
                            Name = "Harris - Abshire",
                            PhoneNumber = "(567) 248-4320",
                            StartTime = new TimeOnly(6, 0, 0)
                        },
                        new
                        {
                            RestaurantId = 5,
                            Address = "660 Bednar Port, East Anibalside, Myanmar",
                            EndTime = new TimeOnly(20, 0, 0),
                            Name = "Mueller, Reichel and Walker",
                            PhoneNumber = "931-700-2601",
                            StartTime = new TimeOnly(6, 0, 0)
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.RestaurantReservation.Db.Entities.EmployeesWithRestaurantDetailsView", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("EmployeesWithRestaurantDetailsView");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Capacity = 8,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 2,
                            Capacity = 6,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 3,
                            Capacity = 5,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 4,
                            Capacity = 5,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 5,
                            Capacity = 4,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 6,
                            Capacity = 5,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 7,
                            Capacity = 8,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 8,
                            Capacity = 6,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 9,
                            Capacity = 4,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 10,
                            Capacity = 8,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 11,
                            Capacity = 3,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 12,
                            Capacity = 2,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 13,
                            Capacity = 3,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 14,
                            Capacity = 7,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 15,
                            Capacity = 3,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 16,
                            Capacity = 5,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 17,
                            Capacity = 5,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 18,
                            Capacity = 4,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 19,
                            Capacity = 3,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 20,
                            Capacity = 2,
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Employee", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Restaurant", "Restaurant")
                        .WithMany("Employees")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.MenuItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Order", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entities.Reservation", "Reservation")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.OrderItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Reservation", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entities.Restaurant", "Restaurant")
                        .WithMany("Reservations")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entities.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Table", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entities.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.MenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Reservation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Restaurant", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("MenuItems");

                    b.Navigation("Reservations");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entities.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
